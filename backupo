import React, { useState, useEffect } from 'react';
import { View, Text, TextInput, Button, StyleSheet, FlatList, TouchableOpacity, Platform } from 'react-native';
import {NavigationContainer, useNavigation } from '@react-navigation/native';
import { createStackNavigator } from '@react-navigation/stack';
/* import * as SQLite from 'expo-sqlite'; */

/* function openDatabase() {
  if (Platform.OS === "web") {
    return {
      transaction: () => {
        return {
          executeSql: () => {},
        };
      },
    };
  }

  const db = SQLite.openDatabase("tripDB.db");
  return db;
} */

/* const db = openDatabase(); */
const Stack = createStackNavigator();


const TripForm = () => {
  const [destination, setDestination] = useState('');
  const [dates, setDates] = useState('');
  const [activities, setActivities] = useState('');

  const navigation = useNavigation();

  const handleSubmit = () => {
/*     db.transaction((tx) => {
      tx.executeSql(
        'INSERT INTO trips (destination, dates, activities) VALUES (?, ?, ?)',
        [destination, dates, activities],
        (tx, results) => {
          console.log('Trip data stored successfully:', results);
        },
        error => {
          console.log('Error storing trip data:', error);
        }
      );
    }); */

    // Reset form fields
    setDestination('');
    setDates('');
    setActivities('');
  };

  return (
    <View style={styles.container}>
      <View style={styles.titleBar}>
        <Text style={styles.title}>Create Trip</Text>
        <TouchableOpacity onPress={() => navigation.navigate('TripsList')}>
          <Text style={styles.tripListButton}>Trips List</Text>
        </TouchableOpacity>
      </View>
      <View style={styles.formContainer}>
        <Text style={styles.label}>Destination:</Text>
        <TextInput
          style={styles.input}
          value={destination}
          onChangeText={setDestination}
          isRequired
        />
        <Text style={styles.label}>Dates:</Text>
        <TextInput
          style={styles.input}
          value={dates}
          onChangeText={setDates}
          isRequired
        />
        <Text style={styles.label}>Activities:</Text>
        <TextInput
          style={[styles.input, styles.textArea]}
          value={activities}
          onChangeText={setActivities}
          multiline
          numberOfLines={4}
          isRequired
        />
        <Button title="Submit" onPress={() => handleSubmit()} />
      </View>
    </View>
  );
};

const TripsList = () => {
  const [trips, setTrips] = useState([]);
  const navigation = useNavigation();

/*   useEffect(() => {
    // Fetch stored trip data from SQLite database
    db.transaction(tx => {
      tx.executeSql(
        'SELECT * FROM trips',
        [],
        (_, results) => {
          const len = results.rows.length;
          const tripList = [];
          for (let i = 0; i < len; i++) {
            tripList.push(results.rows.item(i));
          }
          setTrips(tripList);
        },
        error => {
          console.log('Error fetching trip data:', error);
        }
      );
    });
  }, []); */

  const renderTripItem = ({ item }) => (
    <View style={styles.tripItem}>
      <Text style={styles.tripItemText}>Destination: {item.destination}</Text>
      <Text style={styles.tripItemText}>Dates: {item.dates}</Text>
      <Text style={styles.tripItemText}>Activities: {item.activities}</Text>
    </View>
  );

  return (
    <View style={styles.container}>
      <View style={styles.titleBar}>
        <Text style={styles.title}>Trips List</Text>
        <TouchableOpacity onPress={() => navigation.navigate('Form')}>
          <Text style={styles.createTripButton}>Create Trip</Text>
        </TouchableOpacity>
      </View>
      <View style={styles.listContainer}>
        <FlatList
          data={trips}
          renderItem={renderTripItem}
          keyExtractor={(item, index) => index.toString()}
        />
      </View>
    </View>
  );
};

const App = () => {

/*   useEffect(() => {
    console.log("we making the table?")
    db.transaction((tx) => {
      tx.executeSql(
        "drop table trips;"
      );
      tx.executeSql(
        "create table if not exists trips (destination text, date text, activities text);"
      );
    });
  }, []);
 */
  

  return (
    <NavigationContainer>
      <Stack.Navigator initialRouteName="Form">
        <Stack.Screen name="Form" component={TripForm} />
        <Stack.Screen name="TripsList" component={TripsList} />
      </Stack.Navigator>
    </NavigationContainer>
  );
};
const styles = StyleSheet.create({
container: {
flex: 1,
backgroundColor: '#fff',
},
titleBar: {
flexDirection: 'row',
justifyContent: 'space-between',
alignItems: 'center',
padding: 20,
backgroundColor: '#4285F4',
},
title: {
fontSize: 24,
fontWeight: 'bold',
color: '#fff',
},
tripListButton: {
color: '#fff',
},
createTripButton: {
color: '#fff',
},
formContainer: {
padding: 20,
},
label: {
fontSize: 16,
fontWeight: 'bold',
marginBottom: 5,
},
input: {
borderWidth: 1,
borderColor: '#ccc',
borderRadius: 4,
padding: 10,
marginBottom: 10,
},
textArea: {
height: 100,
textAlignVertical: 'top',
},
listContainer: {
flex: 1,
padding: 20,
},
tripItem: {
marginBottom: 10,
borderBottomWidth: 1,
borderBottomColor: '#ccc',
paddingBottom: 10,
},
tripItemText: {
fontSize: 16,
},
});

export default App;